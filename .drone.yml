---
kind: pipeline
type: kubernetes
name: callisto-ui

platform:
  os: linux
  arch: amd64

steps:
  - name: install dependencies
    image: &node_image # The version we're targeting for production
      node:16.15.0
    environment:
      NPM_AUTH_TOKEN:
        from_secret: npm_auth_token
    commands:
      - npm install

  - name: lint project
    image: *node_image
    environment:
      NPM_AUTH_TOKEN:
        from_secret: npm_auth_token
    commands:
      - npm run lint
      - npx stylelint "**/*.scss"
    depends_on:
      - install dependencies

  - name: test project
    image: *node_image
    environment:
      NPM_AUTH_TOKEN:
        from_secret: npm_auth_token
    commands:
      - npm run test
    depends_on:
      - install dependencies

  - name: build project
    image: *node_image
    environment:
      NPM_AUTH_TOKEN:
        from_secret: npm_auth_token
    commands:
      - npm run build
    depends_on:
      - install dependencies

---
kind: pipeline
type: kubernetes
name: deploy

trigger:
  status:
    - success

depends_on:
  - callisto-ui

steps:
  - name: lint
    image: pelotech/drone-helm3
    settings:
      mode: lint
      chart: ./helm
      values_file: ./helm/values.yaml
    when:
      event:
        - push

  - name: deploy to dev
    image: pelotech/drone-helm3
    settings:
      namespace: callisto
      mode: upgrade
      chart: ./helm
      values: image.tag=${DRONE_COMMIT_SHA}
      values_file: ./helm/values.yaml
      release: callisto
      kube_api_server:
        from_secret: dev_kube_api_url
      kube_token:
        from_secret: dev_kube_token
    when:
      # branch:
      # - main
      event:
        - push

---
kind: pipeline
type: kubernetes
name: build notifications

trigger:
  status:
    - success
    - failure
  event:
    - push

depends_on:
  - callisto-ui
  - deploy

steps:
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: SLACK_WEBHOOK_URL
      channel: callisto-tech-notifications
      username: Drone
      template: |
        {{#success build.status}}
          Build #{{ build.number }} succeeded! :tada:
        {{else}}
          Build #{{ build.number }} failed :alert:
        {{/success}}
        Commit: <${DRONE_REPO_LINK}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}> - {{{ trim build.message }}}
        Repo: {{ repo.name }}
        Branch: <${DRONE_REPO_LINK}/commits/{{ build.branch }}|{{ build.branch }}>
        Author: {{ build.author }}
